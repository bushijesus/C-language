#define N_VALUES 5
#include <stdio.h>
int *test()
{
  int a = 10;
  return &a;
}
//计数器方法
int my_strlen1(char *str)
{
  int count = 0;
  while (*str != '\0')
  {
    count++;
    str++;
  }
}
//指针-指针
int my_strlen2(char *str)
{
  char* start = str;
  while (*str != '\0')
  {
    str++;
  }
  return str-start;
  
}
int main()
{
  // int arr[10] = {0};
  // int *p = arr;
  // char *pa = arr;
  // printf("%p\n", p);         //000000000061FDE0
  // printf("%p\n", p + 1);     //000000000061FDE4
  // printf("%p\n", pa);        //000000000061FDE0
  // printf("%p\n", pa + 1);    //000000000061FDE1

  // int *p;  //p是局部指针变量，局部变量不初始化，默认为随机值
  // *p = 20; //非法访问内存

  // int arr[10] = {0};
  // int *p = arr;
  // int i = 0;
  // for (i = 0; i <= 10; i++)
  // {
  //   //当指针指向范围超出数组arr的范围时，p就是野指针
  //   *p = i;
  //   p++;
  // }

  // int *p = test();
  // *p = 20; //离开局部变量作用域

  // float value[N_VALUES];
  // float *vp = value;
  // for (vp = &value[0]; vp < &value[N_VALUES];)
  // {
  //   *vp++ = 0; //把五个数组元素全部初始化成0
  // }

  // int arr[10] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
  // int *p = arr;
  // int *pend = arr + 9;
  // while (p <= pend)
  // {
  //   printf("%d\n", *p);
  //   p++;
  // }

  // int arr[10] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
  // printf("%d", &arr[9] - &arr[0]); //打印9

  // int len1 = my_strlen1("abc");
  // printf("%d", len1);
  // int len2 = my_strlen2("abc");
  // printf("%d", len2);
  // return 0;


}
